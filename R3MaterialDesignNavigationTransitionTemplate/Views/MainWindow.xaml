<mahApps:MetroWindow
    x:Class="R3MaterialDesignNavigationTransitionTemplate.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dlg="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:m="R3MaterialDesignNavigationTransitionTemplate.Models"
    xmlns:mahApps="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:v="clr-namespace:R3MaterialDesignNavigationTransitionTemplate.Views"
    xmlns:vm="clr-namespace:R3MaterialDesignNavigationTransitionTemplate.ViewModels"
    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
    wpf:TransitionAssist.DisableTransitions="True"
    Title="{Binding AppFullTitle}"
    Width="800"
    Height="450"
    dlg:DialogParticipation.Register="{Binding}"
    Background="{DynamicResource MaterialDesignPaper}"
    BorderThickness="1"
    FontFamily="pack:application,,,/MaterialDesignThemes.Wpf;conponent/Resources/Roboto/#Roboto"
    GlowBrush="{DynamicResource AccentColorBrush}"
    Style="{StaticResource MaterialDesignWindow}"
    TextElement.FontSize="16"
    WindowStartupLocation="CenterScreen"
    SizeToContent="WidthAndHeight"    
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    TitleCharacterCasing="Normal"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--  data template used for the dialogs example, defines a View for a ViewModel of type DateTime  -->
            <DataTemplate DataType="{x:Type system:DateTime}">
                <StackPanel Margin="16">
                    <TextBlock Text="England win the World Cup:" />
                    <TextBlock Margin="0,8,0,0" Text="{Binding}" />
                    <TextBlock Margin="0,8,0,0" Text="You will never see that again." />
                    <Button Margin="0,8,0,0" Command="{x:Static wpf:DialogHost.CloseDialogCommand}" Content="AWESOME" IsDefault="True" Style="{StaticResource MaterialDesignFlatButton}" />
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>

    <wpf:DialogHost
        DialogTheme="Inherit"
        Identifier="RootDialog"
        SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

        <wpf:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <wpf:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <ToggleButton
                        Margin="16"
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Top"
                        IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                    <TextBox x:Name="MenuItemsSearchBox" Width="200" Margin="16,4" wpf:HintAssist.Hint="Search" wpf:TextFieldAssist.DecorationVisibility="Collapsed" wpf:TextFieldAssist.HasClearButton="True" DockPanel.Dock="Top" Style="{StaticResource MaterialDesignOutlinedTextBox}" Text="{Binding SearchKeyword.Value, UpdateSourceTrigger=PropertyChanged}" />

                    <ListBox
                        x:Name="MenuItemsListBox"
                        Margin="0,16,0,16"
                        AutomationProperties.Name="MenuPagesListBox"
                        ItemsSource="{Binding MenuItems}"
                        PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp"
                        SelectedIndex="{Binding SelectedIndex.Value}"
                        SelectedItem="{Binding SelectedItem.Value, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource MaterialDesignNavigationPrimaryListBox}">
                        <ListBox.Resources>
                            <Style BasedOn="{StaticResource MaterialDesignScrollBarMinimal}" TargetType="ScrollBar" />
                        </ListBox.Resources>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="m:MenuItem">
                                <TextBlock Margin="24,4,0,4" AutomationProperties.AutomationId="MenuItemPage" Text="{Binding Name}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </wpf:DrawerHost.LeftDrawerContent>

            <DockPanel>
                <wpf:ColorZone
                    Padding="16"
                    wpf:ElevationAssist.Elevation="Dp4"
                    DockPanel.Dock="Top"
                    Mode="PrimaryMid">
                    <DockPanel>
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton
                                x:Name="MenuToggleButton"
                                AutomationProperties.Name="HamburgerToggleButton"
                                Click="MenuToggleButton_OnClick"
                                IsChecked="False"
                                Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                            <Button Margin="24,0,0,0" wpf:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}" Command="{Binding MovePrevCommand}" Content="{wpf:PackIcon Kind=ArrowLeft, Size=24}" Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" Style="{StaticResource MaterialDesignToolButton}" ToolTip="Previous Item" />

                            <Button Margin="16,0,0,0" wpf:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}" Command="{Binding MoveNextCommand}" Content="{wpf:PackIcon Kind=ArrowRight, Size=24}" Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" Style="{StaticResource MaterialDesignToolButton}" ToolTip="Next Item" />

                            <Button Margin="16,0,0,0" wpf:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}" Command="{Binding HomeCommand}" Content="{wpf:PackIcon Kind=Home, Size=24}" Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" Style="{StaticResource MaterialDesignToolButton}" ToolTip="Home" />
                        </StackPanel>

                        <wpf:PopupBox
                            DockPanel.Dock="Right"
                            PlacementMode="BottomAndAlignRightEdges"
                            StaysOpen="False">

                            <StackPanel>
                                <Grid Margin="10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock Margin="0,0,10,0" Text="Light" />
                                    <ToggleButton
                                        x:Name="DarkModeToggleButton"
                                        Grid.Column="1"
                                        Click="MenuDarkModeButton_Click" />
                                    <TextBlock Grid.Column="2" Margin="10,0,0,0" Text="Dark" />
                                    <TextBlock Grid.Row="1" Margin="0,10,10,0" Text="Enabled" />
                                    <ToggleButton
                                        x:Name="ControlsEnabledToggleButton"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Margin="0,10,0,0"
                                        IsChecked="{Binding ControlsEnabled.Value}" />
                                    <TextBlock Grid.Row="2" Margin="0,10,10,0" Text="LTR" />
                                    <ToggleButton
                                        x:Name="FlowDirectionToggleButton"
                                        Grid.Row="2"
                                        Grid.Column="1"
                                        Margin="0,10,0,0"
                                        Click="FlowDirectionButton_Click" />
                                    <TextBlock Grid.Row="2" Grid.Column="2" Margin="10,10,0,0" Text="RTL" />
                                </Grid>
                                <Separator />
                                <Button IsEnabled="False" />
                                <Separator />
                            </StackPanel>
                        </wpf:PopupBox>
                        <StackPanel
                            Margin="4"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22" Text="{Binding AppTitle}" />
                            <TextBlock HorizontalAlignment="Center" Margin="10" VerticalAlignment="Bottom" FontSize="16" Text="{Binding AppVersion}" />
                        </StackPanel>
                    </DockPanel>
                </wpf:ColorZone>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <ScrollViewer
                        x:Name="MainScrollViewer"
                        Grid.Row="1"
                        wpf:ScrollViewerAssist.IsAutoHideEnabled="True"
                        HorizontalScrollBarVisibility="{Binding SelectedItem.Value.HorizontalScrollBarVisibilityRequirement, FallbackValue=Disabled}"
                        VerticalScrollBarVisibility="{Binding SelectedItem.Value.VerticalScrollBarVisibilityRequirement, FallbackValue=Disabled}">
                        <ContentControl
                            Margin="{Binding MarginRequirement, FallbackValue=16}"
                            Content="{Binding Content, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"
                            DataContext="{Binding SelectedItem.Value}"
                            DataContextChanged="OnSelectedItemChanged" />
                    </ScrollViewer>

                    <wpf:Snackbar
                        x:Name="MainSnackbar"
                        Grid.Row="1"
                        MessageQueue="{Binding SnackbarMessageQueue}" />
                </Grid>
            </DockPanel>
        </wpf:DrawerHost>
    </wpf:DialogHost>
</mahApps:MetroWindow>
